{
  "consumer": {
    "name": "frontend"
  },
  "interactions": [
    {
      "description": "a quote request with array numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": []
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with empty string numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": ""
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with float numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": 2.5
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with incorrect Content-Type header",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": "{\"numberOfItems\":3}",
        "headers": {
          "Content-Type": "text/plain"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid or missing Content-Type header"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with missing numberOfItems field",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {},
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Missing numberOfItems field"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with negative numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": -1
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with no body",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Missing numberOfItems field"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with non-numeric numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": "three"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "numberOfItems must be a number"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with null numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": null
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with object numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": {}
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with string numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": "abc"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with very large number of items",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": 1000000
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "cost_usd": {
            "currency_code": "USD",
            "nanos": 0,
            "units": 50000
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.cost_usd.nanos": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$.cost_usd.units": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      }
    },
    {
      "description": "a quote request with whitespace string numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": "   "
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a quote request with zero items",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": 0
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "cost_usd": {
            "currency_code": "USD",
            "nanos": 0,
            "units": 5
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.cost_usd.nanos": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$.cost_usd.units": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      }
    },
    {
      "description": "a quote request with zero numberOfItems",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": 0
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    },
    {
      "description": "a valid quote request with bulk items",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": 20
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "cost_usd": {
            "currency_code": "USD",
            "nanos": 0,
            "units": 15
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.cost_usd.nanos": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$.cost_usd.units": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      }
    },
    {
      "description": "a valid quote request with standard items",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": 3
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "cost_usd": {
            "currency_code": "USD",
            "nanos": 0,
            "units": 10
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.cost_usd.nanos": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$.cost_usd.units": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      }
    },
    {
      "description": "an invalid quote request with negative items",
      "providerStates": [
        {
          "name": "shipping service is ready"
        }
      ],
      "request": {
        "body": {
          "numberOfItems": -1
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/getquote"
      },
      "response": {
        "body": {
          "error": "Invalid number of items"
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 400
      }
    }
  ],
  "metadata": {
    "pact-js": {
      "version": "10.4.1"
    },
    "pactRust": {
      "ffi": "0.4.0",
      "models": "1.0.4"
    },
    "pactSpecification": {
      "version": "3.0.0"
    }
  },
  "provider": {
    "name": "shipping"
  }
}